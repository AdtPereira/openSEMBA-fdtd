name: automatic-release-windows-intelLLVM

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/62641e01-1e8d-4ace-91d6-ae03f7f8a71f/w_BaseKit_p_2024.0.0.49563_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/5b36181e-4974-4733-91c7-0c10c54900a5/w_HPCKit_p_2024.0.0.49588_offline.exe
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-dpcpp-common
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.cpp-dpcpp-common

on:
  push:
    branches:
      - main
      - feature/automatic-releases

jobs:

  builds-and-tests:
    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
            C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
            C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_FORTRAN_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      timeout-minutes: 20
      run: .github/workflows/install_windows.bat $WINDOWS_HPCKIT_URL

    - name: Setup ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: CMake build
      shell: bash
      run: |
        .github/workflows/build_windows.bat
          
    - name: Install python wrapper requirements
      run: |
        python -m pip install -r requirements.txt

    - name: Run all tests 
      shell: bash
      timeout-minutes: 30
      run: |
        .github/workflows/run_tests_windows.bat
                 
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      run: .github/workflows/oneapi_cache_exclude_windows.sh
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Creating archive
      run: |
          tar -czvf windows-intelLLVM-${{ steps.date.outputs.date }}.tar.gz build/bin/* LICENSE

    - name: Generating release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-windows-intelLLVM"
        prerelease: false
        files: |
          windows-intelLLVM-${{ steps.date.outputs.date }}.tar.gz

